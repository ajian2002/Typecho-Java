<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- #1.配置 db的资源-->
    <!--    <context:property-placeholder location="classpath:db.properties"/>-->
    <!-- #2.配置bean  datasource-->
    <bean id="dataSource" lazy-init="false" class="com.alibaba.druid.pool.DruidDataSource">
        <!--        连接池属性        -->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <!--        druid连接池私有属性-->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <!--        <property name="initialSize" value="10"/>-->
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!--        <property name="maxActive" value="10"/>-->
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <!--        <property name="maxWait" value="2000"/>-->
        <!--                关闭连接后不自动commit -->
        <property name="defaultAutoCommit" value="false"/>
        <!--                获取连接超时时间 -->
        <property name="queryTimeout" value="10000"/>
    </bean>
    <!--#3.配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" lazy-init="false">
        <property name="dataSource" ref="dataSource"/>
        <!--        mybatis 的全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--                  扫描并使用pojo的别名-->
        <property name="typeAliasesPackage" value="com.yegetables.pojo"/>
        <!--                  扫描mapper需要的xml-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--#4.扫描mapper接口，动态实现接口，并注入ioc中    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--        注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--        给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.yegetables.dao"/>
    </bean>

    <!--    <bean id="redisStandaloneConfiguration"-->
    <!--          class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">-->
    <!--        <property name="hostName" value="${redis.host}"/>-->
    <!--        <property name="port" value="${redis.port}"/>-->
    <!--        <property name="password" value="${redis.password}"/>-->
    <!--    </bean>-->
    <!--    <bean id="genericObjectPoolConfig" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
    <!--        <constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>-->
    <!--        <constructor-arg name="clientConfig" ref="redisClientConfiguration"/>-->
    <!--    </bean>-->
    <!--    <bean id="redisClientConfiguration"-->
    <!--          class="org.springframework.data.redis.connection.jedis.JedisClientConfiguration">-->
    <!--    </bean>-->
    <!--    <bean id="redisClientConfigurationBuilder"-->
    <!--          class="org.springframework.data.redis.connection.jedis.JedisClientConfiguration.DefaultJedisClientConfigurationBuilder">-->
    <!--        <property name="poolConfig" ref="genericObjectPoolConfig"/>-->
    <!--    </bean>-->


</beans>